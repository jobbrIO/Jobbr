name: CI

on: [push, pull_request]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  IGNORE_NORMALISATION_GIT_HEAD_MOVE: 1
  GITHUBACTIONS: "True"

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.dotnet.name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2022, os: windows-2022 }
        - { name: Linux, os: ubuntu-20.04 }
        - { name: MacOS, os: macos-12 }
        dotnet:
        - { name: .NET 6, version: '6.0.x' }
        - { name: .NET 7, version: '7.0.x' }

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Setup .NET ${{ matrix.dotnet.version }} SDK
        id: setup-dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet.version }}
      - name: Enforce SDK Version
        run: dotnet new globaljson --sdk-version ${{ steps.setup-dotnet.outputs.dotnet-version }} --force
      - name: Verify SDK Installation
        run: dotnet --info

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          updateAssemblyInfo: true
          additionalArguments: '/l console'

      - name: Install Dependencies
        run: dotnet restore source/Jobbr.Storage.MsSql.sln
      - name: Build
        run: dotnet build --configuration Release --no-restore source/Jobbr.Storage.MsSql.sln

      - name: Install Docker on MacOS
        if: runner.os == 'macOS'
        run: |
          brew install docker
          colima start
      - name: Install SQL Server on Linux or MacOS
        if: runner.os != 'Windows'
        run: docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=1StrongPwd!!" -p 1433:1433 -d mcr.microsoft.com/mssql/server:2019-latest
      - name: Install SQL Server on Windows
        if: runner.os == 'Windows'
        run: choco install sql-server-2019 -y --params="'/Q /SUPPRESSPRIVACYSTATEMENTNOTICE /IACCEPTSQLSERVERLICENSETERMS /ACTION=Install /SkipRules=RebootRequiredCheck /FEATURES=SQLENGINE /SECURITYMODE=SQL /TCPENABLED=1 /SAPWD=1StrongPwd!!'"
      - name: Test
        if: runner.os != 'macOS' # Can't get the tests to fully connect to the SQL Server at the moment
        run: dotnet test --no-restore --verbosity normal source/Jobbr.Storage.MsSql.sln

      - name: NuGet Pack
        run: nuget pack source/Jobbr.Storage.MsSql.nuspec -version "${{ env.GitVersion_SemVer }}" -prop "target=Release"